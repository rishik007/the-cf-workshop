Parameters:
  DesiredCapacity:
    Description: desired capacity of webservers in the auto scaling group
    Type: Number
    Default: 2
  PublicSubnetOneId:
    Description: A public subnet Id to use for the load balancer
    Type: AWS::EC2::Subnet::Id
    Default: subnet-2c48d444
  PublicSubnetTwoId:
    Description: A public subnet Id to use for the load balancer, in a different availability zone
    Type: AWS::EC2::Subnet::Id
    Default: subnet-ca8a8d87

Resources:
  launchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []

          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true
    Properties:
      ImageId: ami-25615740
      InstanceType: t2.micro
      SecurityGroups:
        - !Sub ${securityGroup.GroupId}
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -eux
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r launchConfiguration --region ${AWS::Region} -v
   
  autoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref DesiredCapacity
      LaunchConfigurationName: !Ref launchConfiguration
      LoadBalancerNames:
        - !Ref loadBalancer
      MaxSize: !Ref DesiredCapacity
      MinSize: 0
      VPCZoneIdentifier:
        - !Ref PublicSubnetOneId
        - !Ref PublicSubnetTwoId
        
  webServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []

          services:
            sysvinit:
              httpd:
                enabled: true
                ensureRunning: true

    Properties:
      ImageId: ami-25615740
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref securityGroup
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -xe
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r webServer --region ${AWS::Region} -v

  securityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: access web application
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80


Outputs:
  webserverIPAddress:
    Value: !Sub ${webServer.PublicIp}